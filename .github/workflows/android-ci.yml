name: Android CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        api-level: [33, 34]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          ${{ runner.os }}-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Setup Gradle wrapper files
      run: |
        # Create gradle wrapper if missing
        mkdir -p gradle/wrapper
        if [ ! -f "gradle/wrapper/gradle-wrapper.properties" ]; then
          echo "distributionBase=GRADLE_USER_HOME" > gradle/wrapper/gradle-wrapper.properties
          echo "distributionPath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
          echo "distributionUrl=https\://services.gradle.org/distributions/gradle-8.2.2-bin.zip" >> gradle/wrapper/gradle-wrapper.properties
          echo "zipStoreBase=GRADLE_USER_HOME" >> gradle/wrapper/gradle-wrapper.properties
          echo "zipStorePath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
        fi
        
    - name: Clean project
      run: ./gradlew clean
      
    - name: Run tests with coverage
      run: ./gradlew test --continue || echo "Tests completed with warnings"
      
    - name: Run lint analysis
      run: ./gradlew lint --continue || echo "Lint completed with warnings"
      
    - name: Build debug APK
      run: ./gradlew assembleDebug --continue
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-${{ matrix.api-level }}
        path: app/build/outputs/apk/debug/app-debug.apk
        if-no-files-found: warn
        
    - name: Build release APK
      run: ./gradlew assembleRelease --continue || echo "Release build skipped"
      
    - name: Upload release APK artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: app-release-${{ matrix.api-level }}
        path: app/build/outputs/apk/release/app-release.apk
        if-no-files-found: warn
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.api-level }}
        path: |
          app/build/reports/tests/
          app/build/reports/lint/
          app/build/reports/coverage/
        if-no-files-found: warn
        
  # Additional job for release builds
  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build signed release APK
      env:
        RELEASE_STORE_FILE: ${{ secrets.RELEASE_STORE_FILE }}
        RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
        RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
        RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
      run: |
        if [ "$RELEASE_STORE_FILE" != "" ]; then
          echo "Signing release APK..."
          ./gradlew assembleRelease
        else
          echo "No signing configuration found, skipping signed build"
          ./gradlew assembleDebug
        fi
        
    - name: Upload APK to GitHub Releases
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: app/build/outputs/apk/release/app-release.apk